{"ast":null,"code":"// src/services/authService.js\n\nexport async function register({\n  name,\n  email,\n  password\n}) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      let users = JSON.parse(localStorage.getItem(\"users\")) || [];\n\n      // Check if user already exists\n      if (users.find(u => u.email === email)) {\n        reject(new Error(\"User already exists\"));\n        return;\n      }\n\n      // Create a new user\n      const newUser = {\n        id: Date.now(),\n        name,\n        email,\n        password\n      };\n      users.push(newUser);\n      localStorage.setItem(\"users\", JSON.stringify(users));\n\n      // Save logged-in user in localStorage\n      const loggedUser = {\n        ...newUser,\n        token: \"fake-jwt-token\"\n      };\n      localStorage.setItem(\"user\", JSON.stringify(loggedUser));\n      resolve(loggedUser);\n    }, 500);\n  });\n}\nexport async function login({\n  email,\n  password\n}) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      let users = JSON.parse(localStorage.getItem(\"users\")) || [];\n      const user = users.find(u => u.email === email && u.password === password);\n      if (!user) {\n        reject(new Error(\"Invalid credentials\"));\n        return;\n      }\n      const loggedUser = {\n        ...user,\n        token: \"fake-jwt-token\"\n      };\n      localStorage.setItem(\"user\", JSON.stringify(loggedUser));\n      resolve(loggedUser);\n    }, 500);\n  });\n}\nexport async function logout() {\n  localStorage.removeItem(\"user\");\n}","map":{"version":3,"names":["register","name","email","password","Promise","resolve","reject","setTimeout","users","JSON","parse","localStorage","getItem","find","u","Error","newUser","id","Date","now","push","setItem","stringify","loggedUser","token","login","user","logout","removeItem"],"sources":["C:/Users/user/OneDrive/Desktop/blog-frontend/src/services/authService.js"],"sourcesContent":["// src/services/authService.js\n\nexport async function register({ name, email, password }) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      let users = JSON.parse(localStorage.getItem(\"users\")) || [];\n\n      // Check if user already exists\n      if (users.find((u) => u.email === email)) {\n        reject(new Error(\"User already exists\"));\n        return;\n      }\n\n      // Create a new user\n      const newUser = { id: Date.now(), name, email, password };\n      users.push(newUser);\n      localStorage.setItem(\"users\", JSON.stringify(users));\n\n      // Save logged-in user in localStorage\n      const loggedUser = { ...newUser, token: \"fake-jwt-token\" };\n      localStorage.setItem(\"user\", JSON.stringify(loggedUser));\n\n      resolve(loggedUser);\n    }, 500);\n  });\n}\n\nexport async function login({ email, password }) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      let users = JSON.parse(localStorage.getItem(\"users\")) || [];\n\n      const user = users.find(\n        (u) => u.email === email && u.password === password\n      );\n      if (!user) {\n        reject(new Error(\"Invalid credentials\"));\n        return;\n      }\n\n      const loggedUser = { ...user, token: \"fake-jwt-token\" };\n      localStorage.setItem(\"user\", JSON.stringify(loggedUser));\n\n      resolve(loggedUser);\n    }, 500);\n  });\n}\n\nexport async function logout() {\n  localStorage.removeItem(\"user\");\n}\n"],"mappings":"AAAA;;AAEA,OAAO,eAAeA,QAAQA,CAAC;EAAEC,IAAI;EAAEC,KAAK;EAAEC;AAAS,CAAC,EAAE;EACxD,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtCC,UAAU,CAAC,MAAM;MACf,IAAIC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE;;MAE3D;MACA,IAAIJ,KAAK,CAACK,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACZ,KAAK,KAAKA,KAAK,CAAC,EAAE;QACxCI,MAAM,CAAC,IAAIS,KAAK,CAAC,qBAAqB,CAAC,CAAC;QACxC;MACF;;MAEA;MACA,MAAMC,OAAO,GAAG;QAAEC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;QAAElB,IAAI;QAAEC,KAAK;QAAEC;MAAS,CAAC;MACzDK,KAAK,CAACY,IAAI,CAACJ,OAAO,CAAC;MACnBL,YAAY,CAACU,OAAO,CAAC,OAAO,EAAEZ,IAAI,CAACa,SAAS,CAACd,KAAK,CAAC,CAAC;;MAEpD;MACA,MAAMe,UAAU,GAAG;QAAE,GAAGP,OAAO;QAAEQ,KAAK,EAAE;MAAiB,CAAC;MAC1Db,YAAY,CAACU,OAAO,CAAC,MAAM,EAAEZ,IAAI,CAACa,SAAS,CAACC,UAAU,CAAC,CAAC;MAExDlB,OAAO,CAACkB,UAAU,CAAC;IACrB,CAAC,EAAE,GAAG,CAAC;EACT,CAAC,CAAC;AACJ;AAEA,OAAO,eAAeE,KAAKA,CAAC;EAAEvB,KAAK;EAAEC;AAAS,CAAC,EAAE;EAC/C,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtCC,UAAU,CAAC,MAAM;MACf,IAAIC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE;MAE3D,MAAMc,IAAI,GAAGlB,KAAK,CAACK,IAAI,CACpBC,CAAC,IAAKA,CAAC,CAACZ,KAAK,KAAKA,KAAK,IAAIY,CAAC,CAACX,QAAQ,KAAKA,QAC7C,CAAC;MACD,IAAI,CAACuB,IAAI,EAAE;QACTpB,MAAM,CAAC,IAAIS,KAAK,CAAC,qBAAqB,CAAC,CAAC;QACxC;MACF;MAEA,MAAMQ,UAAU,GAAG;QAAE,GAAGG,IAAI;QAAEF,KAAK,EAAE;MAAiB,CAAC;MACvDb,YAAY,CAACU,OAAO,CAAC,MAAM,EAAEZ,IAAI,CAACa,SAAS,CAACC,UAAU,CAAC,CAAC;MAExDlB,OAAO,CAACkB,UAAU,CAAC;IACrB,CAAC,EAAE,GAAG,CAAC;EACT,CAAC,CAAC;AACJ;AAEA,OAAO,eAAeI,MAAMA,CAAA,EAAG;EAC7BhB,YAAY,CAACiB,UAAU,CAAC,MAAM,CAAC;AACjC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}