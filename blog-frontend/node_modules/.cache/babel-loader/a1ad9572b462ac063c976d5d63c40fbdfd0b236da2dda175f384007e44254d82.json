{"ast":null,"code":"import api from \"../api/axiosConfig\";\nexport const fetchBlogs = params => api.get(\"/blogs\", {\n  params\n}).then(r => r.data.data);\nexport const fetchBlog = id => api.get(`/blogs/${id}`).then(r => r.data);\nexport const createBlog = async ({\n  title,\n  content,\n  tags,\n  imageFile\n}) => {\n  let imageData = null;\n  if (imageFile) {\n    const form = new FormData();\n    form.append(\"file\", imageFile);\n    const upload = await api.post(\"/upload\", form, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    });\n    imageData = {\n      url: upload.data.url,\n      public_id: upload.data.public_id\n    };\n  }\n  const {\n    data\n  } = await api.post(\"/blogs\", {\n    title,\n    content,\n    tags,\n    images: imageData ? [imageData] : []\n  });\n  return data;\n};\nexport const updateBlog = async (id, {\n  title,\n  content,\n  tags,\n  imageFile,\n  replaceImages = false\n}) => {\n  let imageData = null;\n  if (imageFile) {\n    const form = new FormData();\n    form.append(\"file\", imageFile);\n    const upload = await api.post(\"/upload\", form, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    });\n    imageData = {\n      url: upload.data.url,\n      public_id: upload.data.public_id\n    };\n  }\n  const {\n    data\n  } = await api.put(`/blogs/${id}`, {\n    title,\n    content,\n    tags,\n    images: imageData ? [imageData] : undefined,\n    replaceImages: replaceImages.toString()\n  });\n  return data;\n};\nexport const deleteBlog = id => api.delete(`/blogs/${id}`).then(r => r.data);\nexport const addComment = (blogId, text) => api.post(`/blogs/${blogId}/comments`, {\n  text\n}).then(r => r.data);\nexport const toggleLike = blogId => api.post(`/blogs/${blogId}/like`).then(r => r.data);\nexport const fetchUserBlogs = userId => api.get(`/users/${userId}/blogs`).then(r => r.data);\nexport const fetchAllUsers = () => api.get(\"/users\").then(r => r.data);\nexport const adminDeleteUser = userId => api.delete(`/admin/users/${userId}`).then(r => r.data);","map":{"version":3,"names":["api","fetchBlogs","params","get","then","r","data","fetchBlog","id","createBlog","title","content","tags","imageFile","imageData","form","FormData","append","upload","post","headers","url","public_id","images","updateBlog","replaceImages","put","undefined","toString","deleteBlog","delete","addComment","blogId","text","toggleLike","fetchUserBlogs","userId","fetchAllUsers","adminDeleteUser"],"sources":["C:/Users/Manis/Desktop/blogging platform/blog-frontend/src/services/blogService.js"],"sourcesContent":["import api from \"../api/axiosConfig\";\n\nexport const fetchBlogs = (params) =>\n  api.get(\"/blogs\", { params }).then((r) => r.data.data);\n\nexport const fetchBlog = (id) => api.get(`/blogs/${id}`).then((r) => r.data);\n\nexport const createBlog = async ({ title, content, tags, imageFile }) => {\n  let imageData = null;\n  if (imageFile) {\n    const form = new FormData();\n    form.append(\"file\", imageFile);\n    const upload = await api.post(\"/upload\", form, {\n      headers: { \"Content-Type\": \"multipart/form-data\" },\n    });\n    imageData = {\n      url: upload.data.url,\n      public_id: upload.data.public_id\n    };\n  }\n  const { data } = await api.post(\"/blogs\", { \n    title, \n    content, \n    tags, \n    images: imageData ? [imageData] : []\n  });\n  return data;\n};\n\nexport const updateBlog = async (id, { title, content, tags, imageFile, replaceImages = false }) => {\n  let imageData = null;\n  if (imageFile) {\n    const form = new FormData();\n    form.append(\"file\", imageFile);\n    const upload = await api.post(\"/upload\", form, {\n      headers: { \"Content-Type\": \"multipart/form-data\" },\n    });\n    imageData = {\n      url: upload.data.url,\n      public_id: upload.data.public_id\n    };\n  }\n  const { data } = await api.put(`/blogs/${id}`, { \n    title, \n    content, \n    tags, \n    images: imageData ? [imageData] : undefined,\n    replaceImages: replaceImages.toString()\n  });\n  return data;\n};\n\nexport const deleteBlog = (id) => api.delete(`/blogs/${id}`).then((r) => r.data);\n\nexport const addComment = (blogId, text) => api.post(`/blogs/${blogId}/comments`, { text }).then((r) => r.data);\n\nexport const toggleLike = (blogId) => api.post(`/blogs/${blogId}/like`).then((r) => r.data);\n\nexport const fetchUserBlogs = (userId) => api.get(`/users/${userId}/blogs`).then((r) => r.data);\n\nexport const fetchAllUsers = () => api.get(\"/users\").then((r) => r.data);\n\nexport const adminDeleteUser = (userId) => api.delete(`/admin/users/${userId}`).then((r) => r.data);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}